install.packages('stringr')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
library(stringr)
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
library("chron")
install.packages('chron')
library('chron')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
?? chron
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
install.packages('date')
library('date')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
?? date
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
print(summer.break)
print(today)
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
days <- as.date(6/9/2017) - as.date(4/4/2017)
days <- as.date(4/4/2017) - as.date(6/9/2017)
print(as.date(6/9/2017) - 5)
print(as.date(6/9/2017))
print(as.date(2017/6/9))
print(as.date(6/9/17))
print(as.date(9jun2017))
print(as.date(09062017))
print(as.date(962017))
print(as.date(6-9-2017))
print(as.date(20170609))
print(as.date('6/9/2017'))
print(as.date('6/9/2017') - as.date('4/4/2017'))
print(as.date(Sys.date()))
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
?? stringr
?? FunctionName
? FunctionName
sentences <- c("Jane saw a cat", "Jane sat down")
word(sentences, 1)
word(sentences, 2)
strings <- c(" 219 733 8965", "329-293-8753 ", "banana", "595 794 7569",
"387 287 6718", "apple", "233.398.9187 ", "482 952 3315",
"239 923 8115 and 842 566 4692", "Work: 579-499-7527", "$1000",
"Home: 543.355.3679")
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
str_extract(strings, phone)
str_match(strings, phone)
# Extract/match all
str_extract_all(strings, phone)
str_match_all(strings, phone)
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
str_match(c("INFO 201", "CSE 142")), "[0-9]")
str_match(c("INFO 201", "CSE 142"), "[0-9]")
str_match(c("INFO 201", "CSE 142"), "[0-9]{3}")
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
source('~/Documents/works/info-201/a2-core-skills-doomibox/assignment.R')
install.packages("stringr")
print(RemoveDigits(c("INFO 201", "CSE 142")))
library('stringr')
print(RemoveDigits(c("INFO 201", "CSE 142")))
library(jsonlite)
library(httr)
library(dplyr)
library(knitr)
uri<- "https://congress.api.sunlightfoundation.com/districts/locate"
query.params <- list(zip = "98109")
response <- GET(uri, query = query.params)
body <- content(response, "text")
results <- fromJSON(body)
flattened <- flatten(results$results)
districts <- flattened$district
uri<- "https://congress.api.sunlightfoundation.com/legislators/locate"
query.params <- list(zip = "98109")
results <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(results$results)
committee.id <- flattened$bioguide_id
committee.name <- paste(flattened$first_name, flattened$last_name)
col.name <- c("First Name", "Last Name", "Title", "Party", "Chamber", "Phone", "Website", "Twitter")
result.table <- flattened %>% select(first_name, last_name, title, party, chamber, phone)
result.table$website <- paste0("[Link](", flattened$website, ")")
result.table$twitter <- paste0("[Link](", flattened$twitter_id, ")")
library(plyr)
committee <- function(id) {
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(member_ids = id)
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results)
flattened$id <- id
flattened$name <- committee.name[committee.id==id]
return(as.data.frame(flattened))
}
binded.result <- rbind.fill(lapply(committee.id, committee))
View(result.table)
View(binded.result)
View(binded.result %>% group_by(name) %>% summarise(n = n()))
binded.result %>% group_by(name) %>% summarise(n = n()) %>% View()
binded.result %>% group_by(name) %>% summarise(n = ncol()) %>% View()
binded.result %>% group_by(name) %>% summarise(n = ncol(name)) %>% View()
binded.result %>% group_by(name) %>% summarise(n = nrow(name)) %>% View()
binded.result %>% group_by(name) %>% summarise(n = n())
library(dplyr)
binded.result %>% group_by(name) %>% summarise(n = n()) %>% View()
detach("package:plyr", unload=TRUE)
library(dplyr)
binded.result %>% group_by(name) %>% summarise(n = n()) %>% View()
View(binded.result)
View(flattened)
View(binded.result)
not.sub <- binded.result %>% select(subcommittee)
View(not.sub)
not.sub <- binded.result %>% filter(subcommittee)
View(not.sub)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
generate <- function() {
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id)
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results)
return(flattened)
}
depth <- generate()
View(depth)
generate <- function() {
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results)
return(flattened)
}
depth <- generate()
View(depth)
View(depth)
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results)
return(flattened)
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$members)
View(flattened)
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results$members)
return(flattened)
View(not.sub)
View(flattened)
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results$members[[1]])
return(flattened)
View(flattened)
generate <- function() {
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results$members[[1]])
return(flattened)
}
generate <- function() {
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results$members[[1]])
return(flattened)
}
body <- generate()
View(body)
generate <- function() {
not.sub <- binded.result %>% filter(subcommittee)
chosen.id <- not.sub$committee_id[sample(1:length(not.sub$committee_id),1)]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results$members[[1]])
return(flattened)
}
body <- generate()
View(depth)
View(generate())
View(generate())
View(not.sub)
not.sub <- binded.result %>% filter(subcommittee)
index <- sample(1:length(not.sub$committee_id),1)
chosen.id <- not.sub$committee_id[index]
chosen.name <- not.sub$name[index]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
body <- flatten(response$results$members[[1]])
chair <- paste(body$legislator.first_name[title=="Chairman"], body$legislator.last_name[title=="Chairman"])
chosen.side <- body$side[chosen.name==paste(body$legislator.first_name, body$legislator.last_name)]
female <- body %>% filter(legislator.gender="F") %>% nrow()
male <- body %>% filter(legislator.gender="M") %>% nrow()
percent.f <- female / (female + male)
percent.m <- male / (female + male)
chair <- paste(body$legislator.first_name[title=="Chairman"], body$legislator.last_name[title=="Chairman"])
chair <- paste(body$legislator.first_name[body$title=="Chairman")], body$legislator.last_name[body$title=="Chairman"])
chair <- paste(body$legislator.first_name[body$title=="Chairman"], body$legislator.last_name[body$title=="Chairman"])
chair <- paste(body$legislator.first_name[body$title=="Chairman"&&!is.na(body$title)], body$legislator.last_name[body$title=="Chairman"]&&!is.na(body$title))
chair <- paste(body$legislator.first_name[body$title=="Chairman"&&!is.na(body$title)], body$legislator.last_name[body$title=="Chairman"&&!is.na(body$title)])
chair
chair <- paste(body$legislator.first_name[body$title=="Chairman"&!is.na(body$title)], body$legislator.last_name[body$title=="Chairman"&!is.na(body$title)])
chair
chosen.side <- body$side[chosen.name==paste(body$legislator.first_name, body$legislator.last_name)]
chosen.side
female <- body %>% filter(legislator.gender=="F") %>% nrow()
male <- body %>% filter(legislator.gender=="M") %>% nrow()
percent.f <- female / (female + male)
percent.m <- male / (female + male)
percent.f <- round(female / (female + male) * 100, digits = 1)
percent.m <- round(male / (female + male) * 100, digits = 1)
query.params <- list(committee_id = chosen.id)
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results)
View(flattened)
binded.result <- rbind.fill(lapply(committee.id, committee))
library(plyr)
committee <- function(id) {
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(member_ids = id)
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
flattened <- flatten(response$results)
flattened$id <- id
flattened$name <- committee.name[committee.id==id]
return(as.data.frame(flattened))
}
binded.result <- rbind.fill(lapply(committee.id, committee))
detach("package:plyr", unload=TRUE)
library(dplyr)
count.result <- binded.result %>% group_by(name) %>% summarise(n = n()) %>% arrange(n)
View(not.sub)
query.params <- list(committee_id = chosen.parent.id)
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
name <- flatten(response$results)$name
not.sub <- binded.result %>% filter(subcommittee)
index <- sample(1:length(not.sub$committee_id),1)
chosen.id <- not.sub$committee_id[index]
chosen.name <- not.sub$name[index]
chosen.parent.id <- not.sub$parent_committee_id[index]
uri <- "https://congress.api.sunlightfoundation.com/committees"
query.params <- list(committee_id = chosen.id, fields="members")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
body <- flatten(response$results$members[[1]])
chair <- paste(body$legislator.first_name[body$title=="Chairman"&!is.na(body$title)], body$legislator.last_name[body$title=="Chairman"&!is.na(body$title)])
chosen.side <- body$side[chosen.name==paste(body$legislator.first_name, body$legislator.last_name)]
female <- body %>% filter(legislator.gender=="F") %>% nrow()
male <- body %>% filter(legislator.gender=="M") %>% nrow()
percent.f <- round(female / (female + male) * 100, digits = 1)
percent.m <- round(male / (female + male) * 100, digits = 1)
query.params <- list(committee_id = chosen.parent.id)
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
name <- flatten(response$results)$name
name
uri <- "https://en.wikipedia.org/w/api.php"
query.params <- list(action="query", list="search", srsearch=name)
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
uri <- "https://en.wikipedia.org/w/api.php"
query.params <- list(action="query", list="search", srsearch=name, format="json")
response <- GET(uri, query = query.params) %>% content("text") %>% fromJSON()
search.result <- flatten(response$query$search)
View(search.result)
introduction <- search.result$snippet[[0]]
introduction <- search.result$snippet[1]
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = CTNTN))
library(ggplot2)
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = CTNTN))
df <- data.frame(read.csv("MDRCTNCOMP.csv", stringsAsFactors = F))
setwd("~/Documents/works/Statistical Learning/Mandarin-Cantonese")
df <- data.frame(read.csv("MDRCTNCOMP.csv", stringsAsFactors = F))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = CTNTN))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'dodge')
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill')
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Tone')
df <- data.frame(read.csv("MDRCTNCOMP.csv", stringsAsFactors = F))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Tone')
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Consonant')
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRTN, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Consonant')
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRTN, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Tone')
setwd("~/Documents/works/Statistical-Learning/MDN-CTN-compare")
df <- data.frame(read.csv("https://doomibox.github.io/MDN-CTN-compare/MDRCTNCOMP.csv", stringsAsFactors = F))
df <- data.frame(read.csv("https://doomibox.github.io/MDN-CTN-compare/MDRCTNCOMP.csv", stringsAsFactors = F))
View(df)
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Consonant')
View(df)
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Consonant')
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Consonant')
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Consonant')
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
ggplot(data = df) +
geom_bar(mapping = aes(x = MDRCSNT, fill = as.character(CTNTN)),
position = 'fill') +
labs(fill = 'CTN Tone', x = 'MDR Consonant')
fillbarchart <- function(df, xcol, fillcol, xlab, filllab) {
p <- ggplot(data = df) +
geom_bar(mapping = aes(x = df[,xcol], fill = as.character(df[,fillcol]),
position = 'fill') +
labs(fill = xlab, x = filllab)
return(p)
}
fillbarchart <- function(df, xcol, fillcol, xlab, filllab) {
p <- ggplot(data = df) +
geom_bar(mapping = aes(x = df[,xcol], fill = as.character(df[,fillcol])),
position = 'fill') +
labs(fill = xlab, x = filllab)
return(p)
}
fillbarchart(df, "MDRCSNT", "CTNTN", "MDR consonant", "CTN consonant")
fillbarchart(df, "MDRTN", "CTNTN", "MDR consonant", "CTN consonant")
fillbarchart <- function(df, xcol, fillcol, xlab, filllab) {
p <- ggplot(data = df) +
geom_bar(mapping = aes(x = df[,xcol], fill = as.character(df[,fillcol])),
position = 'fill') +
labs(fill = filllab, x = xlab)
return(p)
}
fillbarchart(df, "MDRTN", "CTNTN", "MDR tone", "CTN consonant")
fillbarchart(df, "MDRCSNT", "CTNCSNT", "MDR consonant", "CTN consonant")
fillbarchart(df, "MDRCSNT", "CTNTN", "MDR consonant", "CTN tone")
fillbarchart(df, "MDRTN", "CTNCSNT", "MDR tone", "CTN consonant")
fillbarchart(df, "CTNCSNT", "MDRTN","CTN consonant","MDR tone")
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
df <- data.frame(read.csv("https://docs.google.com/spreadsheets/d/1VAcIz4XDN7D5NKbiIfNSpuEZ6Fmh7SWZaDQ3BCrLUAM/pub?gid=0&single=true&output=csv", stringsAsFactors = F))
View(df)
fillbarchart(df, "CTNCSNT", "MDRTN","CTN consonant","MDR tone")
fillbarchart(df, "MDRCSNT", "CTNTN", "MDR consonant", "CTN tone")
fillbarchart(df, "CTNCSNT", "CTNTN","CTN consonant","CTN tone")
fillbarchart(df, "MDRCSNT", "MDRTN", "MDR consonant", "MDR tone")
fillbarchart(df, "CTNCSNT", "CTNTN","CTN consonant","CTN tone")
